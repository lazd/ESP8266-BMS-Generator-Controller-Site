:root {
  --gap: 5rem;
}

html {
  font-size: 20px;
  font-family: 'Kanit', Arial, Helvetica, sans-serif;
  background: rgb(35, 35, 35);
  color: white;
}

html,
body {
  margin: 0;
}

h1 {
  text-align: center;
  font-size: 3rem;
  margin: 2rem;
}

.powerSources {
  margin: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--gap);
  margin: var(--gap);
}

.powerSource {
  transition: filter;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.powerSource-info {
  font-weight: 500;
  font-size: 2rem;
}

.home,
.powerSource-icon {
  display: block;
  width: 12rem;
  height: 12rem;
}

.home {
  margin: var(--gap) auto;
}

.powerSource.is-off {
  filter: grayscale(1);
}

.battery-charging {
  animation-name: throb;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-play-state: running;
  transition: opacity 1s ease-out;
}

.generator-meter {
  transform-origin: 50% 50%;
  animation-name: meter;
  animation-duration: 1s;
  animation-timing-function: ease-in-out;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-play-state: running;
  --animation-distance: 18deg;
}

.power-plant-cloud {
  animation-name: puff;
  animation-duration: 2s;
  animation-timing-function: ease-in;
  animation-iteration-count: infinite;
  animation-play-state: running;
  transform-origin: center;
}

.powerSource.is-charging .battery-charge-fill {
  animation: float 1s ease-in-out infinite alternate;
  --charge-level: 1;
}

.powerSource:not(.is-charging) .battery-charging {
  animation-name: unset;
  opacity: 0;
}

.is-off .power-plant-cloud {
  display: none;
}

.is-off .generator-meter {
  animation-name: unset;
}

@keyframes float {
  0% {
    transform: scaleY(calc(var(--charge-level) * 0.99));
  }

  100% {
    transform: scaleY(calc(var(--charge-level) * 1.01));
  }
}

@keyframes throb {
  0% {
    opacity: 0.25;
  }

  100% {
    opacity: 1;
  }
}

@keyframes meter {
  0% {
    transform: rotate(calc(-1 * var(--animation-distance)));
  }

  100% {
    transform: rotate(var(--animation-distance));
  }
}

@keyframes puff {
  0% {
    transform: scale(0);
    opacity: 1;
  }

  100% {
    transform: scale(1);
    opacity: 0;
  }
}